{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReduces.js","firebase/firebase-config.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","loadNotes","a","collection","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","uiFinishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","NotesAppBar","style","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","JournalScreen","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2e933f1d.chunk.js","sourcesContent":["export const types = {\n  login: '[Auth] Login',\n  logout: '[Auth] Logout',\n\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n\n  uiStartLoading: '[UI] Start loading',\n  uiFinishLoading: '[UI] Finish loading',\n\n  notesAddNew: '[Notes] New note',\n  notesActive: '[Notes] Set active note',\n  notesLoad: '[Notes] Load notes',\n  notesUpdated: '[Notes] Updated note',\n  notesFileUrl: '[Notes] Updated image url',\n  notesDelete: '[Notes] Delete note',\n  notesLogoutCleaning: '[Notes] Logout Cleaning',\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  loading: false,\n  msgError: null,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return {\n        ...state,\n        msgError: action.payload,\n      };\n    case types.uiRemoveError:\n      return {\n        ...state,\n        msgError: null,\n      };\n\n    case types.uiStartLoading:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case types.uiFinishLoading:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  notes: [],\n  active: null,\n};\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesActive:\n      return {\n        ...state,\n        active: {\n          ...action.payload,\n        },\n      };\n\n    case types.notesAddNew:\n      return {\n        ...state,\n        notes: [action.payload, ...state.notes],\n      };\n\n    case types.notesLoad:\n      return {\n        ...state,\n        notes: [...action.payload],\n      };\n\n    case types.notesUpdated:\n      return {\n        ...state,\n        notes: state.notes.map(note =>\n          note.id === action.payload.id ? action.payload.note : note\n        ),\n      };\n\n    case types.notesDelete:\n      return {\n        ...state,\n        active: null,\n        notes: state.notes.filter(note => note.id !== action.payload),\n      };\n\n    case types.notesLogoutCleaning:\n      return {\n        ...state,\n        active: null,\n        note: [],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReduces';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n      break;\n  }\n};\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APPID,\n};\n\n// const firebaseConfigTesting = {\n//   apiKey: 'AIzaSyAPo-WAc4SGQ4D4LbFwymkDDVQX7b-Zx5hs',\n//   authDomain: 'react-testings-981ea.firebaseapp.com',\n//   projectId: 'react-testings-981ea',\n//   storageBucket: 'react-testings-981ea.appspot.com',\n//   messagingSenderId: '856201897362',\n//   appId: '1:856201897362:web:0b47a242b31459c8958d4b',\n// };\n\n// if (process.env.NODE_ENV === 'test') {\n//   // testing\n//   firebase.initializeApp(firebaseConfigTesting);\n// } else {\n//   // dev / prod\n//   firebase.initializeApp(firebaseConfig);\n// }\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","import { db } from '../firebase/firebase-config';\n\nexport const loadNotes = async uid => {\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n  const notes = [];\n\n  notesSnap.forEach(snapHijo => {\n    notes.push({\n      id: snapHijo.id,\n      ...snapHijo.data(),\n    });\n  });\n\n  return notes;\n};\n","export const fileUpload = async file => {\n  const cloudUrl = 'https://api.cloudinary.com/v1_1/dliwhrdin/upload';\n\n  const formData = new FormData();\n  formData.append('upload_preset', 'react-journal');\n  formData.append('file', file);\n\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      return null;\n      // throw await resp.json();\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\n\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime(),\n    };\n\n    try {\n      const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n\n      dispatch(activeNote(doc.id, newNote));\n      dispatch(addNewNote(doc.id, newNote));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note,\n  },\n});\n\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note,\n  },\n});\n\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\n\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes,\n});\n\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note };\n    delete noteToFirestore.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\n\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note,\n    },\n  },\n});\n\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const { active: activeNote } = getState().notes;\n\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      },\n    });\n\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n\n    dispatch(startSaveNote(activeNote));\n\n    Swal.close();\n  };\n};\n\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n    dispatch(deleteNote(id));\n  };\n};\n\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id,\n});\n\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning,\n});\n","import { types } from '../types/types';\n\nexport const setError = err => ({\n  type: types.uiSetError,\n  payload: err,\n});\n\nexport const removeError = () => ({\n  type: types.uiRemoveError,\n});\n\nexport const uiStartLoading = () => ({\n  type: types.uiStartLoading,\n});\n\nexport const uiFinishLoading = () => ({\n  type: types.uiFinishLoading,\n});\n","import Swal from 'sweetalert2';\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { noteLogout } from './notes';\nimport { uiFinishLoading, uiStartLoading } from './ui';\n\nexport const startLoginEmailPassword = (email, password) => {\n  return dispatch => {\n    dispatch(uiStartLoading());\n\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n\n        dispatch(uiFinishLoading());\n      })\n      .catch(e => {\n        console.log(e);\n        dispatch(uiFinishLoading());\n        Swal.fire('Error', e.message, 'error');\n      });\n  };\n};\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return dispatch => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch(e => {\n        console.log(e);\n        Swal.fire('Error', e.message, 'error');\n      });\n  };\n};\n\nexport const startGoogleLogin = () => {\n  return dispatch => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\nexport const startLogout = () => {\n  return async dispatch => {\n    await firebase.auth().signOut();\n\n    dispatch(logout());\n    dispatch(noteLogout());\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = (newFormState = initialState) => {\n    setValues(newFormState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n  const { loading } = useSelector(state => state.ui);\n\n  const [formValues, handleInputChange] = useForm({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = e => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Login</h3>\n      <form\n        onSubmit={handleLogin}\n        className=\"animate__animated animate__fadeIn animate__faster\"\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          className=\"auth__input\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n          disabled={loading}\n        >\n          Login\n        </button>\n\n        <div className=\"auth__social-networks\">\n          <p>Login with social networks</p>\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link to=\"/auth/register\" className=\"link\">\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport { removeError, setError } from '../../actions/ui';\n\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  const { msgError } = useSelector(state => state.ui);\n\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(setError('Name is required'));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if (password !== password2 || password.length < 5) {\n      dispatch(\n        setError(\n          'Password should be at least 6 characters and match each other'\n        )\n      );\n      return false;\n    }\n\n    dispatch(removeError());\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Register</h3>\n      <form\n        onSubmit={handleRegister}\n        className=\"animate__animated animate__fadeIn animate__faster\"\n      >\n        {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleInputChange}\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          className=\"auth__input\"\n          value={password}\n          onChange={handleInputChange}\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          name=\"password2\"\n          className=\"auth__input\"\n          value={password2}\n          onChange={handleInputChange}\n        />\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\n          Register\n        </button>\n\n        <Link to=\"/journal-app/auth/login\" className=\"link\">\n          Already registered?\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/journal-app/auth/login\" component={LoginScreen} />\n\n          <Route\n            exact\n            path=\"/journal-app/auth/register\"\n            component={RegisterScreen}\n          />\n\n          <Redirect to=\"/journal-app/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={props =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/journal-app/auth/login\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={props =>\n        isAuthenticated ? (\n          <Redirect to=\"/journal-app/\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active } = useSelector(state => state.notes);\n\n  const handleSave = () => {\n    dispatch(startSaveNote(active));\n  };\n\n  const handlePictureClick = () => {\n    document.querySelector('#fileSelector').click();\n  };\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n  };\n\n  return (\n    <div className=\"notes__appbar\">\n      <span>August 28, 2020</span>\n\n      <input\n        id=\"fileSelector\"\n        type=\"file\"\n        name=\"file\"\n        style={{ display: 'none' }}\n        onChange={handleFileChange}\n      />\n      <div>\n        <button className=\"btn\" onClick={handlePictureClick}>\n          Picture\n        </button>\n        <button className=\"btn\" onClick={handleSave}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n\n  const { active: note } = useSelector(state => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const { body, title, id } = formValues;\n\n  const activeId = useRef(note.id);\n\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n\n  useEffect(() => {\n    dispatch(activeNote(formValues.id, { ...formValues }));\n  }, [formValues, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  };\n\n  return (\n    <div className=\"notes__main-content\">\n      <NotesAppBar />\n\n      <div className=\"notes__content\">\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Some awesome tittle\"\n          className=\"notes__title-input\"\n          autoComplete=\"off\"\n          value={title}\n          onChange={handleInputChange}\n        />\n\n        <textarea\n          name=\"body\"\n          placeholder=\"what happened today\"\n          className=\"notes__textarea\"\n          value={body}\n          onChange={handleInputChange}\n        ></textarea>\n\n        {note.url && (\n          <div className=\"notes__image\">\n            <img src={note.url} alt=\"imagen\" />\n          </div>\n        )}\n      </div>\n\n      <button className=\"btn btn-danger\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n  const dispatch = useDispatch();\n\n  const noteDate = moment(date);\n\n  const handleEntryClick = () => {\n    dispatch(activeNote(id, { date, title, body, url }));\n  };\n\n  return (\n    <div\n      className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n      onClick={handleEntryClick}\n    >\n      {url && (\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundSize: 'cover',\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      )}\n\n      <div className=\"journal__entry-body\">\n        <p className=\"journal__entry-title\">{title}</p>\n        <p className=\"journal__entry-content\">{body}</p>\n      </div>\n\n      <div className=\"journal__entry-date-box\">\n        <span>{noteDate.format('dddd')}</span>\n        <h4>{noteDate.format('Do')}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n  const { notes } = useSelector(state => state.notes);\n\n  return (\n    <div className=\"journal__entries\">\n      {notes.map(note => (\n        <JournalEntry key={note.id} {...note} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { JournalEntries } from './JournalEntries';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(state => state.auth);\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  const handleAddNew = () => {\n    dispatch(startNewNote());\n  };\n\n  return (\n    <aside className=\"journal__sidebar\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\"></i>\n          <span> {name} </span>\n        </h3>\n        <button className=\"btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"journal__new-entry\" onClick={handleAddNew}>\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n        <p className=\"mt-5\">New entry</p>\n      </div>\n\n      <JournalEntries />\n    </aside>\n  );\n};\n","import React from 'react';\n\nexport const NothingSelected = () => {\n  return (\n    <div className=\"nothing__main-content\">\n      <p>\n        Select something\n        <br />\n        pr create an entry!\n      </p>\n      <i className=\"far fa-star fa-4x mt-5\"></i>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { Sidebar } from './Sidebar';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n  const { active } = useSelector(state => state.notes);\n\n  return (\n    <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n      <Sidebar />\n\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../firebase/firebase-config';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [cheking, setCheking] = useState(true);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLoggedIn(true);\n\n        dispatch(startLoadingNotes(user.uid));\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setCheking(false);\n    });\n  }, [dispatch, setCheking, setIsLoggedIn]);\n\n  if (cheking) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"loading-spinner--item\">\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/journal-app/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/journal-app/\"\n            component={JournalScreen}\n          />\n\n          <Redirect to=\"/journal-app/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}